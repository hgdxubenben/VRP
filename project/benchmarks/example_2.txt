
// A scenario is composed of a set of locations, set of orders, and a set of cars
// Each order may provide a profit, while travelling to a location causes a cost.
// A solution is a plan how to deliver all or at least some of the orders while never violating the car's capacity constraints.


// -------------- LOCATIONS --------------
// Each location has an ID, an x- and a y-coordinate.
// The location with ID 0 is the depot where all cars start and have to return to.
// The cost to travel from one locations to another is the Euclidean distance of their coordinates in the 2D plane, rounded up to the next full integer.

locationCount: 29
locationList: // ID X-COORDINATE Y-COORDINATE
0 -4399 10956 // <-- depot
1 -4420 11063
2 -4419 10998
3 -4401 11142
4 -4466 10897
5 -15303 -7555
6 -4446 10911
7 -4333 10884
8 -4445 10951
9 4829 5017
10 4795 4964
11 -4413 10949
12 4791 5040
13 -4502 10882
14 -4418 11088
15 -4460 10921
16 -4355 10774
17 -4481 11023
18 -4464 10914
19 4852 4976
20 4807 4999
21 4786 4995
22 -4362 10892
23 -4467 11020
24 -4421 10904
25 -4447 11009
26 -4509 10932
27 -4349 10983
28 -4494 10985


// -------------- ORDERS --------------
// Each order has an ID, a pick-up location, a destination location, a weight, and a profit.
// A car needs to drive to the order's pick-up location (which incurs a cost), pick the order up, drive to its destination location (which incurs a cost), and unload it there (which profits the profit).
// However, the total weight a car can transport at once is limited (see later).

orderCount: 20
orderList: // ID PICK-UP-LOCATION-ID DELIVERY-LOCATION-ID WEIGHT PROFIT
0 2 22 66 158
1 6 28 33 113
2 3 10 78 13489
3 5 7 22 28076
4 14 18 55 363
5 8 24 55 157
6 7 9 16 21333
7 3 21 19 15889
8 6 27 78 265
9 16 23 31 615
10 15 8 40 70
11 13 20 52 15945
12 14 4 69 467
13 25 12 28 14034
14 18 11 63 130
15 19 10 15 196
16 17 26 50 238
17 28 5 39 35950
18 24 2 12 139
19 22 1 52 223


// -------------- CARS --------------
// Each car has an ID and a capacity.
// All cars are initially located at the depot (the location with ID 0) and need to return to there at the end.
// No car can load more weight as its capacity limit allows.
// Cars transport orders from their pick-up locations to their delivery locations.

carCount: 3
carList: // ID CAPACITY-LIMIT
0 170
1 220
2 200
